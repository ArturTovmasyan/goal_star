<?php

namespace LB\UserBundle\Entity\Repository;
use LB\UserBundle\Entity\UserRelation;

/**
 * UserAdRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserAdRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * @param $currentUser
     * @param $location
     * @return mixed
     */
    public function findByUserAndLocation($currentUser, $location)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT ur
                           FROM LBUserBundle:UserAdLocation ur
                           WHERE ur.user = :us and ur.location =:loc")
            ->setParameter('us', $currentUser)
            ->setParameter('loc', $location)
            ->setMaxResults(1)
            ->getOneOrNullResult();
    }

    /**
     * @param $currentUser
     * @return mixed
     */
    public function deleteExistLocations($currentUser)
    {
        return $this->getEntityManager()
            ->createQuery("DELETE
                           FROM LBUserBundle:UserAdLocation ur
                           WHERE ur.user = :us")
            ->setParameter('us', $currentUser)
            ->execute();
    }


    /**
     * @param $currentUser
     * @param $locations
     * @return array
     */
    public function findFriendsLocation($currentUser, $locations)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT la FROM LBUserBundle:UserAdLocation la
                           JOIN la.user u
                           JOIN LBUserBundle:UserRelation ur WITH ((ur.fromUser = u AND ur.toUser = :userId) OR (ur.fromUser = :userId AND ur.toUser = u)) AND ur.fromStatus = :status AND ur.toStatus = :status
                           JOIN la.location l WITH l in (:locations)
                           WHERE u.id != :userId
            ")
            ->setParameter('userId', $currentUser->getId())
            ->setParameter('locations', $locations)
            ->setParameter('status', UserRelation::LIKE)
            ->getResult();
    }
}
