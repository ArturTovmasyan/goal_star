<?php

namespace LB\UserBundle\Entity\Repository;

/**
 * UserPushRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserPushRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $firstUser
     * @param $secondUser
     * @param $location
     * @return array
     */
    public function findPush($firstUser, $secondUser, $location)
    {
        return $this->getEntityManager()
            ->createQuery("SELECT up.id
                           FROM LBUserBundle:UserPush up
                           WHERE up.location = :location AND
                            ((up.firstUser = :firstUser AND up.secondUser = :secondUser) OR
                            (up.firstUser = :secondUser AND up.secondUser = :firstUser))

                          ")
            ->setParameter('firstUser', $firstUser)
            ->setParameter('secondUser', $secondUser)
            ->setParameter('location', $location)
            ->getResult();
    }

    /**
     * @param $userId
     * @return array
     */
    public function removePushByUser($userId)
    {
        return $this->getEntityManager()
            ->createQuery("DELETE
                           FROM LBUserBundle:UserPush up
                           WHERE up.firstUser = :userId OR up.secondUser = :userId")
            ->setParameter('userId', $userId)
            ->execute();
    }

    /**
     * @param $currentUser
     * @return mixed
     */
    public function deleteExistPushes($currentUser)
    {
        return $this->getEntityManager()
            ->createQuery("DELETE
                           FROM LBUserBundle:UserPush p
                           WHERE p.firstUser = :userId OR p.secondUser = :userId")
            ->setParameter('userId', $currentUser)
            ->execute();
    }


}
